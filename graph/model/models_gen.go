// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Node interface {
	IsNode()
	GetID() string
}

type Link struct {
	ID      string `json:"id"`
	Title   string `json:"title"`
	Address string `json:"address"`
	User    *User  `json:"user"`
}

type LinkTagToTodoPayload struct {
	TodoID string `json:"todoID"`
	TagID  string `json:"tagID"`
}

type Login struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type NewLink struct {
	Title   string `json:"title"`
	Address string `json:"address"`
}

type NewTag struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

type NewTodo struct {
	Title       string  `json:"title"`
	Description *string `json:"description"`
}

type NewUser struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type RefreshTokenInput struct {
	Token string `json:"token"`
}

type Tag struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

type Todo struct {
	ID          string `json:"id"`
	Title       string `json:"title"`
	Description string `json:"description"`
	User        *User  `json:"user"`
	Tags        []*Tag `json:"tags"`
}

type User struct {
	ID              string               `json:"id"`
	Name            string               `json:"name"`
	TodosConnection *UserTodosConnection `json:"todosConnection"`
}

func (User) IsNode()            {}
func (this User) GetID() string { return this.ID }

type UserTodosConnection struct {
	Edges []*UserTodosEdge `json:"edges"`
}

type UserTodosEdge struct {
	Node *Todo `json:"node"`
}
